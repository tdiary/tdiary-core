#
# tDiary configuration file $Revision: 1.38 $
#
# For those who do not read Japanese: please read doc/README.en.html or
# misc/i18n/README-en.rd and use misc/i18n/tdiary.conf.sample-en.
#

#-------
# 設定画面から指定できない項目群
#-------

# 日記データベースを作成するディレクトリ【必須】
#   日記のデータを保存するディレクトリです。このディレクトリは通常、WWW
#   経由でアクセスできない(public_html配下でない)ディレクトリを指定しま
#   す。このディレクトリは、WWWサーバの権限で書き込めるパーミッションに
#   しておく必要があります。
@data_path = 'data'

# 日記保存形式の指定【オプション】
#   日記の保存形式を標準から変更する場合には、必要な設定をしなければなり
#   ません。何も指定しない場合にはtDiary2形式(テキスト)になります。
#   何を指定するかは、その保存形式用プログラムの説明に従ってください。
#   以下の2行のコメント(#)をはずすと、tDiary1形式(バイナリ)になります。
#require 'tdiary/pstoreio'
#@io_class = TDiary::PStoreIO

# 日記記述形式の指定【オプション】
#   日記の記述形式(書き方のフォーマット)を指定できます。現在は'tDiary'
#   のみがサポートされていますが、記述形式用プログラムを追加すればそれを
#   指定することも可能です。
#@style = 'tDiary'

# 参照・更新スクリプト名【オプション】
#   @indexと@updateには、それぞれ参照用、更新用のスクリプトファイル名を
#   指定できます。通常これらは内部的にデフォルトの名前(「./」と「update.rb」)
#   が設定されていますが、これを明示することで、ApacheのDirectoryIndexが
#   指定できない環境や、フレーム内に日記を入れたい場合に利用できます。行
#   頭の「#」を外してから値を書き換えて下さい。
#@index = './'
#@update = 'update.rb'

# マルチユーザモード【オプション】
#   @multi_userは、日記を複数ユーザで記述するときに利用する変数です。こ
#   の値をtrueにすると、マルチユーザモードになり、tDiaryは以下のように挙
#   動を変え、サブタイトルの先頭に、「[ユーザ名]サブタイトル」という形式
#   で記入者の名前が入ります。
#   マルチーユーザモードでの日記の編集は、とても危険です。なぜなら、複数
#   の人が同時に編集作業をした場合、先に保存した人の日記が消えてしまうか
#   らです。tDiaryをマルチユーザモードで利用する場合は十分に注意して運用
#   しましょう。
#   ここでいう「ユーザ名」は、ブラウザからログインする時に使ったものです。
#   なお、.htaccessのRequire Userに、必要なだけユーザを追加するのを忘れ
#   ないでください。
@multi_user = false

# プラグインのパス【オプション】
#   単一のインストールイメージで複数の日記を運用する場合に、プラグイン
#   を分けたい場合があります。その場合、@plugin_pathでプラグインのディ
#   レクトリを指定することで、日記ごとにことなるプラグインを指定できま
#   す。なお、この指定がない場合には、インストール先のpluginディレクト
#   リが使われます。
#@plugin_path = 'path of plugins'

# キャッシュファイルのパス【オプション】
#   tDiaryは動作時にさまざまなキャッシュファイルを作成します。このディ
#   レクトリは通常、@data_pathの下に作られますが、ここで別のディレクト
#   リを指定することも可能です。
#@cache_path = 'path of cache'

# プラグインに渡すオプション【オプション】
#   プラグインによっては、tdiary.conf経由でオプションを渡すことで挙動を
#   変更できるものがあります。@optionsはそのオプションを指定する時に使う
#   変数です。指定方法は以下のとおりです。詳しくは各プラグインの説明を参
#   照照して下さい。
#     例: sampleプラグインのhogeオプションを設定
#         @options['sample.hoge'] = 'foobar'

# プラグイン適用後にもういちどプラグインを適用するかどうか(true/false)
@options['apply_plugin'] = true

# 編集画面でのアクセスキー
#   true なら有効になります。Safari で Emacs と同じキーバインディングを
#   使いたい場合は false にするといいでしょう。
@accesskey_enabled = true

# tDiaryをproxyの内側に設置する場合(頭に「http://」を付けない)
# @options['proxy'] = 'proxy.example.com:8080'

# bot扱いすべきUser-Agentたち。Googlebotなどはデフォルトで対応している
@options['bot'] = [
	'^BlogLines/',
	'^blogmap',
	'MI[CK]AN/',
	'^NG/',
	'^samidare',
	'^TAMATEBAKO/'
]

# リンク元の記録制御(true/false)【オプション】
#   日付指定のアクセス時のリンク元だけを記録するかどうかを指定します。標
#   準ではtrue(日付指定のみ記録)です。これをfalseにすると最新ページへの
#   アクセスが「本日のリンク元」に記録されるようになるので、リンク元表示
#   のノイズが増えます。
@referer_day_only = true

#-------
# 設定画面から変更できる項目群。必要なら書き換えて使用してください。
# なお、一度設定画面から設定してしまうと、こちらのファイルを編集しても反
# 映されません。
#-------

# あなたの名前とメールアドレス
#   @author_nameにはあなたの名前を、@author_mailにはあなたのメールアドレ
#   スを指定します。この値は、HTML化された日記のヘッダ部分に埋め込まれま
#   す。
@author_name = 'Your name'
@author_mail = 'foo@example.net'

# 日記より上位のコンテンツがある場合に指定
#   @index_pageには、あなたの日記の表紙(またはホームページのトップページ)
#   のURLを指定してください。日記のヘッダ部分および、ページの先頭に埋め
#   込まれます。
@index_page = 'http://www.example.net/~foo/'

# TITLEタグおよび携帯端末で使われる日記タイトル。
#   HTMLタグは使えません。
@html_title = 'hogehoge diary'

# ヘッダ
#   日記ページの先頭部分に埋め込まれる文を指定します。「HEADER」に挟まれ
#   た部分を書き換えて下さい。そのままの形で埋め込まれるので、HTMLタグが
#   使えます。また、文字列中にはeRubyタグが使用できます。eRubyを知らなく
#   ても、以下の2つのタグはどこかに埋め込んでおかないと不便です。
#   
#   <%=calendar%>
#       カレンダーを埋め込みます。このカレンダーは月ごとの日記へのリンク
#       になっています。
#   <%=navi%>
#       日記の更新などを行うためのメニューを埋め込みます。
#
@header = <<HEADER
<%= navi %>
<h1>ほげほげ日記</h1>
<%=calendar%>
HEADER

# フッタ
#   ヘッダ同様、日記ページの末尾に挿入される文字列を指定できます。
#   「FOOTER」で挟まれた部分を書き換えてください。
@footer = <<FOOTER
<%= navi %>
<p>以下のメッセージを削除するには、「設定」画面から「フッタ」を編集してください。</p>
<p style="font-size: x-large;">あらかじめ<a href="doc/README.html">README</a>と<a href="doc/HOWTO-write-tDiary.html">日記の書き方</a>には目を通すようにしてください。</p>
FOOTER

# 日付のフォーマットの指定
#   日記の日付のフォーマットを指定できます。デフォルトでは「YYYY-MM-DD」
#   になっています。RubyのTime::strftimeのパラメタがすべて使えますが、時
#   刻に関係する部分は指定しても意味がありません。主に使えるのは「%Y」
#   (西暦年)、「%m」(月数値)、「%b」(短月名)、「%B」(長月名)、「%d」(日)、
#   「%a」(短曜日名)、「%A」(長曜日名)といったところでしょう。
@date_format = '%Y-%m-%d'

# セクションアンカーとツッコミアンカーの指定
#   日記のセクションアンカー(@section_anchor)および「ツッコミ」アンカー
#   (@comment_anchor))に使う文字を指定します。
#   それぞれの文字列が<a href="...">〜</a>に挟まれてHTMLに展開されます。
#   なお、classがsanchor(セクションアンカーの場合)やcanchor(ツッコミアン
#   カーの場合)のspanタグを使うと、テーマによっては自動的に画像によるア
#   ンカーが付くようになります。
@section_anchor = '<span class="sanchor">_</span>'
@comment_anchor = '<span class="canchor">_</span>'

# 最新表示時に最大何日分の日記を表示するかの指定
#   最新日記を表示するページで、最大何日分の日記を出力するかを指定します。
#   指定した日数に達しない場合は、その月のすべての日記を出力します。また、
#   指定した日数に届かなかった場合には、前月以前まで遡ります。
@latest_limit = 10

# テーマ名(もしくはCSSのURL)の指定
#   日記のスタイルを決めるテーマ名もしくはCSSファイルのURLを指定します。
#   @themeには添付の標準スタイルシートを指定してあります。これを書き換え
#   て、好みのデザインにできます。themeディレクトリの下には、標準添付の
#   テーマ(*.css)がいくつかありますので、好みに応じて変更してみてくださ
#   い。
#   もちろん、自分でスタイルシートを書いてもかまいません。その場合は@theme
#   には''(空文字列)を指定し、@cssにCSSファイルのURLを記述します。
@theme = 'default'
@css = ''

# ツッコミを表示するかどうか(true or false)
#   「本日のツッコミ」を表示するかどうか指定します。ツッコミは@show_comment
#   をfalseにすることで読者から隠すことができます。日記のオーナー(あなた)
#   は、更新画面で日付を指定することでツッコミを見ることができます。
@show_comment = true

# 最新および月別表示でツッコミを最大何件表示するか
#   「本日のツッコミ」を表示する場合、最新及び月間表示時に最大いくつまで
#   表示するかを指定します。
@comment_limit = 3

# 1日あたりのツッコミ最大数
#   1日に最大何件までツッコミを受け付けるかを指定します。この数を超える
#   と、ツッコミフォーム自体が表示されなくなります。なお、TrackBackプラ
#   グインを導入している場合、この値はツッコミとTrackBackの合計値に対し
#   て適用されます
@comment_limit_per_day = 100

# リンク元リストを表示するかどうか(true or false)
#   「本日のリンク元」を表示するかどうか。リンク元は、日記を訪れてくれた
#   人がどのページにあるリンクをたどってきたかを示すURLです。これがわか
#   ると、自分の日記をリンクしているページがわかるので、日記コミュニケー
#   ションがとりやすくなります。tDiaryはこの情報を日記の読者にも公開する
#   ようになっていますが、@show_refererをfalseにすることで、これを抑止で
#   きます。非表示にしても、日記のオーナー(あなた)は更新画面で日付を指定
#   することでリンク元を見ることが可能です。
@show_referer = true

# 更新時の時差調整
#   更新フォームに自動的に挿入される日付を調整します。単位は「時」で、小
#   数が指定できます。例えば午前2時までを前日として扱いたい場合には「-2」
#   と指定することで、実際の時刻から2時間が引かれた日付が入ります。また、
#   海外サーバ上で運用している場合の時差調整にも利用できます。
@hour_offset = 0

# 長年日記を表示するためのリンクを表示するかどうか(true or false)
#  「長年日記」とは、前年以前の同じ日の日記を一度に参照できるページを生成
#  する機能です。
@show_nyear = false

#-----
# 設定画面から追加設定できるが、ここに(設定画面からは変更できない)標準設
# 定を記述できる項目
#-----

# リンク元リストから除外するURL(正規表現)
#   @no_refererは、リンク元として記録しないURLの配列を指定します。毎日定
#   期的にあるアンテナ経由の訪問者や、検索エンジンのロボットなど、本来の
#   目的(つまり自分の日記の話題に対してのリンク)を探り出すためのものでは
#   ないリンク元はノイズになってしまい、けっこう邪魔です。そのようなリン
#   ク元はここにURLを指定することで記録されなくなります。特に、自分の日
#   記のURLは必ずここに入れておくべきでしょう。書式はRubyの配列(Array)で、
#   中身は文字列です。比較時には正規表現として扱われますが、Regexpオブジ
#   ェクトは指定しないでください。
@no_referer = [
	'^' + Regexp.quote( base_url ),  # 自分の日記
	'^http://localhost[:/]',
	'^http://192\.168\.',
	'^http://172\.1[6789]',
	'^http://172\.2[0-9]',
	'^http://172\.3[01]',
	'^http://10\.',
]

# 「本日のリンク元」にのみ記録するリンク元のURL(正規表現)
#   @only_volatileは、「本日のリンク元」にのみ記録するリンク元URLの配列を
#   記述します。ここに含まれるURLは、たとえ過去の日記に対するアクセスであっ
#   てもその日のリンク元には記録されず、一時的に記録されるだけになります。
#   この記録は、新しい日記を記述すると消去されます。検索サイト経由でのア
#   クセスなどはここに入れておくのが良いかもしれません。指定書式は@no_referer
#   と同じです。
@only_volatile = [
]

# リンク元リストにURLでなく特定文字列を指定する場合の変換表(正規表現)
#   @referer_tableは、「本日のリンク元」の一覧(一日単位で表示される方)に
#   味気ないURLが並ぶのを回避するための設定です。対象となるリンク元のURL
#   の正規表現文字列と、置換後の文字列をペアにした配列をアイテムに持つ配
#   列として記述します。置換後の文字列には、URL中の「(〜)」で囲まれた文
#   字列を\1、\2……といった形で置き換えることができます。上の例では、tDiary
#   で運用されている某作者の日記を日付指定、月指定、指定なしのそれぞれの
#   場合について、別々の文字列に置換しています。
@referer_table = [
	['^http://www\.tdiary\.net/.*', 'tDiary.Net'],
	['^http://sho\.tdiary\.net/(\d{4})(\d\d)(\d\d)\.html', 'ただのにっき(\1-\2-\3)'],
	['^http://sho\.tdiary\.net/(\d{4})(\d\d)\.html', 'ただのにっき(\1-\2)'],
	['^http://([^\.]*)\.tdiary\.net/(\d{4})(\d\d)(\d\d)\.html', 'tDiary.Net[\1](\2-\3-\4)'],
	['^http://([^\.]*)\.tdiary\.net/(\d{4})(\d\d)\.html', 'tDiary.Net[\1](\2-\3)'],
	['^http://([^\.]*)\.tdiary\.net/.*', 'tDiary.Net[\1]'],
	['^http://www.google.(com|co\.jp)/(hws/search|search|ie|m).*?[^ao]q=([^&]*).*', 'google検索(\3)'],
	['^http://blogsearch.google.(com|co\.jp)/blogsearch.*?q=([^&]*).*', 'googleブログ検索(\3)'],
	['^http://(x\.)?search.(mobile\.)?yahoo.(com|co\.jp)/.*?p=([^&]*).*', 'Yahoo検索(\4)'],
	['^http://(blog-search|blogsearch\.mobile)\.yahoo\.co\.jp/.*?p=([^&]*).*', 'Yahooブログ検索(\2)'],
	['^http://search.www.infoseek.co.jp/.*?qt=([^&]*).*', 'Infoseek検索(\1)'],
	['^http://(kotochu|search).fresheye.com/.*?kw=([^&]*).*', 'FreshEye検索(\2)'],
	['^http://(www|search).goo.ne.jp/.*?MT=([^&]*).*', 'goo検索(\2)'],
	['^http://(www|search).nifty.com/.*?(q|Text)=([^&]*).*', '@nifty検索(\3)'],
	['^http://www.excite.co.jp/.*?(search|s)=([^&]*).*', 'excite検索(\2)'],
	['^http://search.msn.co.jp/.*?(q|MT)=([^&]*).*', 'msn検索(\2)'],
	['^http://search.live.com/.*?q=([^&]*).*', 'Live Search(\1)'],
  	['http://www.bing.com/.*?q=([^&]*).*', 'Bing(\1)'],
	["^http://cgi.search.biglobe.ne.jp/cgi-bin/search.*?q=([^&]*).*", "BIGLOBE検索(\\1)"],
	#
	# 以下の設定は、上記の置換リストで変換されなかったリンク元URLのうち、
	# 50文字を越えるものの後半を省略するという設定です。これはかならず
	# @referer_tableの末尾に入っていないと意味がありません。@referer_table
	# に新しい置換ルールを追加する場合は、この上に挿入してください。
	#
	['^(.{50}).*$', '\1...'],
]

# Cross-Site Request Forgery (CSRF)に対する防御の方法の指定。
#
# CSRF検査では、常にリクエスト方法と
# 不正なRefererが送信されていないことの検査は行なわれます。
# それに加えて、
#   1: 正しいRefererが存在することを検査する(キーは使わない)
#   2: 乗っ取り防止キーを検査する(Refererが空であることを許す)
#   3: 正しいRefererと乗っ取り防止キーの双方を検査する
# のいずれかの設定が可能です。
#
# 日記著者がRefererを送信しないブラウザを使用している場合、乗っ取り防止キーを
# 設定の上、2にしてください。Refererを送信しないブラウザを利用している
# 場合、1, 3にすると書き込み・設定変更ができなくなります。
#
# 通常のRefererを送信するブラウザを利用している場合は、
# 1か3にしてください。3にする場合、乗っ取り防止キーの設定も必要です。
#
# なお、2, 3にした場合、この機構に対応しない一部のプラグインが
# 動作しなくなることがあります。
#
@options['csrf_protection_method'] = 1

# 乗っ取り防止キーの指定。
# 任意の文字列を指定します。この鍵が盗まれると、CSRFにより大きな被害を
# 受ける可能性がありますので、気をつけて管理して下さい。
# csrf_protection_method が1の場合、鍵は使われません。
# csrf_protection_method が2または3の場合、鍵が空だと設定変更ができなくなります。
@options['csrf_protection_key'] = ''

# Refererの検査において、正しい参照元と見なすURLにマッチする正規表現。
# @updateに相当するページは自動的に追加されますが、
# 何らかの理由でこれらが適切でない場合、または特定のページ(例えば、
# 自分専用ポータルページ)を追加で指定したい場合に指定して下さい。
# nil、空文字列の場合は何もマッチしないものと扱われます。
# 信頼できないサイトにマッチしないよう十分留意して下さい。
@options['csrf_protection_allowed_referer_regexp_for_update'] = ''

#----
# CGIによる設定ファイルを読む指定【必須】
#   セキュリティを強化したい場合(tDiaryで日記サービスを提供するなど)に
#   は、@secureをtrueにして下さい。危険な変数操作や、ファイルの読み込み
#   が制限されます。
#----
@secure = false
load_cgi_conf

